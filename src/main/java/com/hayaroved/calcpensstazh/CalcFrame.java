/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.hayaroved.calcpensstazh;

import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author masha_pc
 */

public class CalcFrame extends javax.swing.JFrame {
    static ArrayList<Period> period = new ArrayList();
    static int periodLength;
    static String periodTu;
    static String periodDv;
   
    public CalcFrame() throws ParseException, InterruptedException {
        initComponents();        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jDateChooser3 = new com.toedter.calendar.JDateChooser();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Нет", "МКС", "МКСР", "РКС", "РКСМ", "СЕЛО", "Ч31", "Ч33", "Ч34", "Ч35", "Ч36" }));

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Нет", "27-11ВП", "27-11ГР", "27-12", "27-14", "27-15", "27-ГД", "27-ГДХР", "27-ПД", "27-ПДРК", "27-СМ", "27-СМХР", "27-СП", "28-ГД", "28-ГДХР", "28-ПД", "28-ПДРК", "28-СМ", "28-СМХР", "28-СП", "ВЫСШПИЛ", "ЗП78ВП", "ЗП78ГР", "ЗП78СС", "ЗП78ФЛ", "ЗП80ПД", "ЗП80РК", "ЗП81ГД", "ЗП81СМ", "ИНСПЕКТ", "ИСПКЛС1", "ИТС", "ИТСИСП", "ИТСМАВ", "ЛЕТИСП", "ЛЕТРАБ", "НОРМАПР", "НОРМСП", "ОПЫТИСП", "РЕАКТИВН", "САМОЛЕТ", "СПАСАВ", "СПЕЦАВ", "ТВОРЧ15", "ТВОРЧ20", "ТВОРЧ25", "ТВОРЧ30", "УВД", "УЧЛЕТ", "ХИРУРГД", "ХИРУРСМ" }));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Начало периода");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Конец периода");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("<html>Условия для досрочного<br>выхода на пенсию</html>");
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Терр. условия");
        jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jButton1.setText("Ввод периодов");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Расчет");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 608, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 79, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                                    .addComponent(jDateChooser2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                                    .addComponent(jDateChooser3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel3)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(79, 79, 79)
                                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jDateChooser2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(jComboBox1)
                    .addComponent(jDateChooser3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
           try {
               period();
           } catch (ParseException | InterruptedException ex) {
               Logger.getLogger(CalcFrame.class.getName()).log(Level.SEVERE, null, ex);
           }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       try {
               try {
                   calcOfPeriods();
               } catch (IOException | InterruptedException ex) {
                   Logger.getLogger(CalcFrame.class.getName()).log(Level.SEVERE, null, ex);
               }
                       } catch (ParseException ex) {
               Logger.getLogger(CalcFrame.class.getName()).log(Level.SEVERE, null, ex);
           }
    }//GEN-LAST:event_jButton2ActionPerformed
        
        
    public  void period() throws ParseException, InterruptedException {
        periodTu = (String)jComboBox1.getSelectedItem();
        periodDv = (String)jComboBox2.getSelectedItem();            
              
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy.MM.dd", Locale.ENGLISH);
        jDateChooser2.setDateFormatString("yyyy.MM.dd");            
        String s1 =  sdf.format(jDateChooser2.getDate());
        jDateChooser3.setDateFormatString("yyyy.MM.dd");            
        String s2 =   sdf.format(jDateChooser3.getDate());
        period.add(new Period (s1, s2,periodTu,periodDv));          
        
    }    
    public static int daysBetween(Date dataOfBegin, Date dataOfEnd) {
        periodLength = (int) ((dataOfEnd.getTime() - dataOfBegin.getTime()) / (1000 * 60 * 60 * 24));
        return periodLength;
    }
    
    public int initOfDates(String tmpdata1, String tmpdata2) throws ParseException{
        Date data_start;
            Date data_end;
            Calendar cal1 = new GregorianCalendar();
            Calendar cal2 = new GregorianCalendar();
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy.MM.dd", Locale.ENGLISH);
            data_start = sdf.parse(tmpdata1);
            data_end = sdf.parse(tmpdata2);
            cal1.setTime(data_start);
            cal2.setTime(data_end);
            int tAll=daysBetween(cal1.getTime(), cal2.getTime());
            return tAll;
    }
    public void calcOfPeriods() throws ParseException, IOException, InterruptedException {
        String[] MassivTU = {"МКС", "МКСР", "РКС", "РКСМ", "СЕЛО", "Ч31", "Ч33", "Ч34", "Ч35", "Ч36"};
        String[] MassivDv = {"27-11ВП", "27-11ГР", "27-12", "27-14", "27-15", "27-ГД", "27-ГДХР", "27-ПД",
                "27-ПДРК", "27-СМ", "27-СМХР", "27-СП", "28-ГД", "28-ГДХР",
                "28-ПД", "28-ПДРК", "28-СМ", "28-СМХР", "28-СП", "ВЫСШПИЛ", "ЗП78ВП", "ЗП78ГР", "ЗП78СС",
                "ЗП78ФЛ", "ЗП80ПД", "ЗП80РК", "ЗП81ГД", "ЗП81СМ", "ИНСПЕКТ",
                "ИСПКЛС1", "ИТС", "ИТСИСП", "ИТСМАВ", "ЛЕТИСП", "ЛЕТРАБ", "НОРМАПР", "НОРМСП", "ОПЫТИСП",
                "РЕАКТИВН", "САМОЛЕТ", "СПАСАВ", "СПЕЦАВ", "ТВОРЧ15", "ТВОРЧ20",
                "ТВОРЧ25", "ТВОРЧ30", "УВД", "УЧЛЕТ", "ХИРУРГД", "ХИРУРСМ"};
        // указание массивов хранения периодов в зависимости от условий и общей суммы
        int[] staghTu = new int[MassivTU.length];
        int[] staghDv = new int[MassivDv.length];
        int allstazg = 0;
        for (Period tmpPeriod: period){            
            int tAll=initOfDates(tmpPeriod.getDataBegin(), tmpPeriod.getDataEnd());
            allstazg += tAll;
            jTextArea1.append("Стажевой период:  "+tmpPeriod.getDataBegin()+ " - "+tmpPeriod.getDataEnd()+"\n");
            jTextArea1.append("Дней в этом периоде  " +tAll+"\n");
            //JOptionPane.showMessageDialog(this, "Дней в этом периоде  " +tAll);
            }
        
        for (int i = 0; i < MassivTU.length; i++) {
            for (Period tmpPeriod: period){
                if (tmpPeriod.gettU().equals(MassivTU[i])) {                   
                    int temp = initOfDates(tmpPeriod.getDataBegin(), tmpPeriod.getDataEnd());
                    staghTu[i] += temp;
                }
            }
        }
            // вычисление стажа по 2-му условию
            for (int i = 0; i < MassivDv.length; i++) {
                for (Period tmpPeriod: period){
                    if (periodDv.equals(MassivDv[i])) {                        
                        int temp = initOfDates(tmpPeriod.getDataBegin(), tmpPeriod.getDataEnd());
                        staghDv[i] += temp;
                    }
                }
            }
                 
               
                
        
        
        
        BufferedWriter writer = new BufferedWriter(new FileWriter("result.txt"));
        
        // вывод результатов общего стажа на экран и в файл
        outAllStazh(allstazg, writer);
        
        // вывод результатов по 1-му условию на экран и в файл
        for (int i = 0; i < MassivTU.length; i++) {
            if (staghTu[i] != 0) {
                writer.write("Стаж по территориальным условиям, ");
                //JOptionPane.showMessageDialog(this, "Стаж по территориальным условиям, "); 
                jTextArea1.append("Стаж по территориальным условиям, \n");

                //System.out.println("Стаж по территориальным условиям, ");
                outSpecStazh(MassivTU[i], staghTu[i], writer);
            }
        }
        // вывод результатов по 2-му условию на экран и в файл
        for (int i = 0; i < MassivDv.length; i++) {
            if (staghDv[i] != 0) {
                writer.write("Стаж для назначения досрочной трудовой пенсии, ");
                jTextArea1.append("Стаж для назначения досрочной трудовой пенсии, \n");
                //JOptionPane.showMessageDialog(this, "Стаж для назначения досрочной трудовой пенсии, ");
                //System.out.println("Стаж для назначения досрочной трудовой пенсии, ");
                outSpecStazh(MassivDv[i], staghDv[i], writer);
            }
        }

        writer.flush();
} 
     public  void outAllStazh(int stazh, BufferedWriter writer) throws IOException {
        writer.write("Общий трудовой стаж равен " + stazh + " дней или ");
        writer.write("приблизительно " + stazh / 365 + " лет, " + (stazh % 365) / 30 + " месяцев, " + (stazh % 365) % 30 + " дней \n");
        jTextArea1.append("Общий трудовой стаж равен " + stazh + " дней или \n");
        jTextArea1.append("приблизительно " + stazh / 365 + " лет, " + (stazh % 365) / 30 + " месяцев, " + (stazh % 365) % 30 + " дней \n");
        
    }
    // метод вывода на экран и записи в файл стажа по условиям
    public  void outSpecStazh(String variantsOfSpecStazh, int SpecStazh, BufferedWriter writer) throws IOException {
        writer.write(" по коду  " + variantsOfSpecStazh + "  составляет  " + SpecStazh + " дней или ");
        writer.write(("приблизительно " + SpecStazh / 365 + " лет, " + (SpecStazh % 365) / 30 + " месяцев, " + (SpecStazh % 365) % 30 + " дней \n"));
        jTextArea1.append("по коду  " + variantsOfSpecStazh + "  составляет  " + SpecStazh + " дней или  \n");
        jTextArea1.append("приблизительно " + SpecStazh / 365 + " лет, " + (SpecStazh % 365) / 30 + " месяцев, " + (SpecStazh % 365) % 30 + " дней \n");
        
    }
        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CalcFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CalcFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CalcFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CalcFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new CalcFrame().setVisible(true);
                } catch (ParseException | InterruptedException ex) {
                    Logger.getLogger(CalcFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private com.toedter.calendar.JDateChooser jDateChooser3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
